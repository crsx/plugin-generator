/* Copyright Â© 2012-2015 IBM Corporation. */
/*
 * generated by Xtext
 */
package ${package};

import ${package}.scoping.CrsxGlobalScopeProvider;
import ${package}.scoping.CrsxLinkingDiagnosticMessageProvider;
import ${package}.scoping.CrsxQualifiedNameProvider;

import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.xtext.linking.ILinkingDiagnosticMessageProvider;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.resource.IContainer;
import org.eclipse.xtext.resource.containers.StateBasedContainerManager;
import org.eclipse.xtext.scoping.IGlobalScopeProvider;

/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class CrsxRuntimeModule extends
		${package}.AbstractCrsxRuntimeModule {

	public Class<? extends ILinkingDiagnosticMessageProvider.Extended> bindILinkingDiagnosticMessageProvider() {
		return CrsxLinkingDiagnosticMessageProvider.class;
	}

	// Bind Project-based container
	public Class<? extends IContainer.Manager> bindIContainer$Manager() {
		return StateBasedContainerManager.class;
	}

	public Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return CrsxQualifiedNameProvider.class;
	}

	@Override
	public Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return CrsxGlobalScopeProvider.class;
	}
	
	@Override
	public Class<? extends ResourceSet> bindResourceSet() {
		return ResourceSetImpl.class;
	}
 
	
}
